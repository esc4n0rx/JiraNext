// components/settings/NotificationSettings.tsx
"use client"

import { useState } from 'react'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { Button } from '@/components/ui/button'
import { Switch } from '@/components/ui/switch'
import { Label } from '@/components/ui/label'
import { Badge } from '@/components/ui/badge'
import { useNotifications } from '@/hooks/use-notifications'
import { useConfig } from '@/hooks/use-config'
import { Bell, BellOff, CheckCircle, XCircle, TestTube, Loader2 } from 'lucide-react'
import { toast } from 'sonner'

export default function NotificationSettings() {
  const { 
    permission, 
    isSupported, 
    requestPermission, 
    isRequesting,
    showNotification 
  } = useNotifications()
  
  const { config, saveConfig } = useConfig()
  const [testing, setTesting] = useState(false)

  const handleToggleNotifications = async (enabled: boolean) => {
    if (enabled && permission !== 'granted') {
      const result = await requestPermission()
      if (result === 'granted') {
        await saveConfig({ ...config, notifications: true })
      }
    } else {
      await saveConfig({ ...config, notifications: enabled })
    }
  }

  const testNotification = async () => {
    if (permission !== 'granted') {
      toast.error('Permiss√£o para notifica√ß√µes n√£o concedida')
      return
    }

    setTesting(true)
    
    try {
      console.log('Iniciando teste de notifica√ß√£o...')
      
      const notification = showNotification('üß™ Teste de Notifica√ß√£o', {
        body: 'Se voc√™ est√° vendo esta mensagem, as notifica√ß√µes est√£o funcionando perfeitamente!',
        icon: '/favicon.ico',
        tag: 'test-notification',
        requireInteraction: false
      })

      if (notification) {
        toast.success('Notifica√ß√£o de teste enviada!')
        console.log('Notifica√ß√£o de teste criada com sucesso')
      } else {
        toast.error('Falha ao criar notifica√ß√£o de teste')
        console.error('Falha ao criar notifica√ß√£o')
      }
    } catch (error) {
      console.error('Erro no teste de notifica√ß√£o:', error)
      toast.error('Erro ao testar notifica√ß√£o')
    } finally {
      setTesting(false)
    }
  }

  const getPermissionStatus = () => {
    if (!isSupported) {
      return (
        <Badge variant="destructive" className="flex items-center space-x-1">
          <XCircle className="h-3 w-3" />
          <span>N√£o Suportado</span>
        </Badge>
      )
    }

    switch (permission) {
      case 'granted':
        return (
          <Badge variant="secondary" className="bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200 flex items-center space-x-1">
            <CheckCircle className="h-3 w-3" />
            <span>Permitido</span>
          </Badge>
        )
      case 'denied':
        return (
          <Badge variant="destructive" className="flex items-center space-x-1">
            <XCircle className="h-3 w-3" />
            <span>Negado</span>
          </Badge>
        )
      default:
        return (
          <Badge variant="outline" className="flex items-center space-x-1">
            <Bell className="h-3 w-3" />
            <span>N√£o Solicitado</span>
          </Badge>
        )
    }
  }

  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center">
          <Bell className="h-5 w-5 mr-2" />
          Configura√ß√µes de Notifica√ß√£o
        </CardTitle>
      </CardHeader>
      <CardContent className="space-y-6">
        {/* Status das permiss√µes */}
        <div className="flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-800 rounded-lg">
          <div>
            <h4 className="font-medium">Status das Notifica√ß√µes</h4>
            <p className="text-sm text-gray-600 dark:text-gray-400">
              Permiss√£o atual do navegador
            </p>
          </div>
          {getPermissionStatus()}
        </div>

        {/* Debug info - remover em produ√ß√£o */}
        <div className="p-3 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg">
          <details className="text-sm">
            <summary className="cursor-pointer font-medium text-blue-800 dark:text-blue-200">
              Informa√ß√µes de Debug
            </summary>
            <div className="mt-2 space-y-1 text-blue-700 dark:text-blue-300">
              <p>‚Ä¢ Suporte: {isSupported ? '‚úÖ Sim' : '‚ùå N√£o'}</p>
              <p>‚Ä¢ Permiss√£o: {permission}</p>
              <p>‚Ä¢ Configura√ß√£o: {config.notifications ? '‚úÖ Habilitada' : '‚ùå Desabilitada'}</p>
              <p>‚Ä¢ Service Worker: {'serviceWorker' in navigator ? '‚úÖ Suportado' : '‚ùå N√£o suportado'}</p>
            </div>
          </details>
        </div>

        {/* Toggle principal */}
        <div className="flex items-center justify-between">
          <div className="space-y-0.5">
            <Label>Notifica√ß√µes de Extra√ß√£o</Label>
            <p className="text-sm text-gray-500">
              Receber notifica√ß√µes quando extra√ß√µes terminarem
            </p>
          </div>
          <Switch
            checked={config.notifications && permission === 'granted'}
            onCheckedChange={handleToggleNotifications}
            disabled={!isSupported}
          />
        </div>

        {/* Bot√µes de a√ß√£o */}
        <div className="space-y-3">
          {permission !== 'granted' && isSupported && (
            <Button
              onClick={requestPermission}
              disabled={isRequesting}
              className="w-full"
              variant="outline"
            >
              {isRequesting ? (
                <Loader2 className="h-4 w-4 mr-2 animate-spin" />
              ) : (
                <Bell className="h-4 w-4 mr-2" />
              )}
              {isRequesting ? 'Solicitando Permiss√£o...' : 'Solicitar Permiss√£o'}
            </Button>
          )}

          {permission === 'granted' && (
            <Button
              onClick={testNotification}
              disabled={testing}
              variant="outline"
              className="w-full"
            >
              {testing ? (
                <Loader2 className="h-4 w-4 mr-2 animate-spin" />
              ) : (
                <TestTube className="h-4 w-4 mr-2" />
              )}
              {testing ? 'Enviando...' : 'Testar Notifica√ß√£o'}
            </Button>
          )}

          {permission === 'denied' && (
            <div className="p-3 bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-lg">
              <p className="text-sm text-yellow-800 dark:text-yellow-200">
                <strong>Permiss√£o negada:</strong> Para habilitar notifica√ß√µes:
              </p>
              <ol className="mt-2 text-sm text-yellow-700 dark:text-yellow-300 list-decimal list-inside space-y-1">
                <li>Clique no √≠cone de cadeado/configura√ß√µes na barra de endere√ßos</li>
                <li>Procure por "Notifica√ß√µes" e altere para "Permitir"</li>
                <li>Recarregue esta p√°gina</li>
                <li>Clique em "Solicitar Permiss√£o" novamente</li>
              </ol>
            </div>
          )}

          {!isSupported && (
            <div className="p-3 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg">
              <p className="text-sm text-red-800 dark:text-red-200">
                <strong>N√£o suportado:</strong> Seu navegador n√£o suporta notifica√ß√µes push. 
                Considere usar uma vers√£o mais recente do Chrome, Firefox, Safari ou Edge.
              </p>
            </div>
          )}
        </div>

        {/* Informa√ß√µes adicionais */}
        <div className="p-4 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg">
          <h4 className="font-medium text-blue-900 dark:text-blue-100 mb-2">
            Como funcionam as notifica√ß√µes
          </h4>
          <ul className="text-sm text-blue-700 dark:text-blue-300 space-y-1">
            <li>‚Ä¢ Voc√™ ser√° notificado quando extra√ß√µes terminarem (sucesso ou erro)</li>
            <li>‚Ä¢ Funciona mesmo com a aba/p√°gina fechada</li>
            <li>‚Ä¢ Clique na notifica√ß√£o para voltar ao aplicativo</li>
            <li>‚Ä¢ As notifica√ß√µes s√£o locais (n√£o enviamos dados para servidores externos)</li>
            <li>‚Ä¢ Pode ser desabilitado a qualquer momento</li>
          </ul>
        </div>
      </CardContent>
    </Card>
  )
}